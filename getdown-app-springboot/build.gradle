buildscript {
	repositories {
		jcenter()
		maven { url "http://repo.spring.io/snapshot" }
		maven { url "http://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version")
	}
}


apply plugin: 'idea'
apply plugin: 'java'
//java configuration
compileJava {
	sourceCompatibility = jdk_version
	targetCompatibility = jdk_version
}
apply plugin: 'application'
apply plugin: 'spring-boot'
ext['tomcat.version'] = '8.5.2'


repositories {
	jcenter()
	maven { url "http://repo.spring.io/snapshot" }
	maven { url "http://repo.spring.io/milestone" }
	mavenCentral()
}

dependencies {
	compile project(':getdown-core')
	compile project(':getdown-webconsole')

	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-logging")
	compile("org.springframework.boot:spring-boot-starter-websocket")
	compile("org.springframework.boot:spring-boot-starter-redis")

	compile("org.springframework:spring-messaging")
	compile("io.projectreactor.spring:reactor-spring-context:$reactor_version")
	compile "io.projectreactor:reactor-core:$reactor_version"
	compile "io.projectreactor:reactor-bus:$reactor_version"

	testCompile("org.springframework.boot:spring-boot-starter-test")

	compile 'org.slf4j:slf4j-api:1.7.10'

	testCompile 'junit:junit:4.11'
	testCompile group: 'ch.qos.logback', name: 'logback-classic', version: "$logback_version"
}


task buildDocker(type: Exec, dependsOn: build) {

	def stageDir=file(project.buildDir.absolutePath+'/docker')

	workingDir stageDir
	commandLine 'docker', 'build', '-t','lumue/getdown','.'

	doFirst {
		copy {
			from jar
			into stageDir
		}
		copy {
			from file('src/main/docker/Dockerfile')
			into stageDir
		}
	}

}

