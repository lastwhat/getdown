buildscript {
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version")
	}
}


apply plugin: 'spring-boot'
ext['tomcat.version'] = '8.5.2'


dependencies {
	compile project(':getdown-core')
	compile project(':getdown-webconsole')

	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-logging")
	compile("org.springframework.boot:spring-boot-starter-websocket")
	compile("org.springframework.boot:spring-boot-devtools")

	compile("org.springframework:spring-messaging")
	compile("io.projectreactor.spring:reactor-spring-context:$reactor_version")
	compile "io.projectreactor:reactor-core:$reactor_version"
	compile "io.projectreactor:reactor-bus:$reactor_version"
	compile "io.projectreactor:reactor-stream:$reactor_version"


	testCompile("org.springframework.boot:spring-boot-starter-test")

	compile 'org.slf4j:slf4j-api:1.7.10'

	testCompile 'junit:junit:4.11'
	testCompile group: 'ch.qos.logback', name: 'logback-classic', version: "$logback_version"
}


task docker(type: Exec, dependsOn: build) {

	dependsOn 'dockerBuild'
	dependsOn 'dockerTagLatest'

}

task dockerBuild(type: Exec){
	def stageDir = file(project.buildDir.absolutePath + '/docker')

	workingDir stageDir
	commandLine 'docker', 'build', '-t', "lumue/getdown:${project.version}", '.'

	doFirst {
		copy {
			from jar
			into stageDir
		}
		copy {
			from file('src/main/docker/Dockerfile')
			into stageDir
		}
	}
}

task dockerTagLatest(type: Exec){

	mustRunAfter 'dockerBuild'

	def stageDir = file(project.buildDir.absolutePath + '/docker')

	workingDir stageDir
	commandLine (['docker', 'tag','-f', "lumue/getdown:${project.version}", 'lumue/getdown:latest'])

}