buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "com.moowork.gradle:gradle-gulp-plugin:0.10"
	}
}


apply plugin: 'eclipse-wtp'

eclipse {
	project {
		natures 'org.eclipse.wst.jsdt.core.jsNature'
		natures 'org.eclipse.wst.common.project.facet.core.nature'
		
		buildCommand 'org.eclipse.wst.jsdt.core.javascriptValidator'
		buildCommand 'org.eclipse.wst.common.project.facet.core.builder'
	}
}

apply plugin: 'com.moowork.gulp'

compileJava.dependsOn gulp_default

def srcDir = new File(projectDir, "src/main/web")
def targetDir = new File(project.buildDir, "resources/main/static/web")
gulp_dist.inputs.dir srcDir
gulp_dist.outputs.dir targetDir

// makes sure on each build that gulp is installed
gulp_build.dependsOn 'installGulp'

// processes your package.json before running gulp build
gulp_build.dependsOn 'npmInstall'

//install js dependencies before gulp build
gulp_build.dependsOn 'bowerInstall'

gulp {
	// Set the directory where gulpfile.js should be found
	workDir = file("${project.projectDir}")

	// Whether colors should output on the terminal
	colors = true

	// Whether output from Gulp should be buffered - useful when running tasks in parallel
	bufferOutput = false
}

// Get the path for the locally installed binaries
task npmBin << {
	new ByteArrayOutputStream().withStream { os ->
		def result = exec {
			executable = 'npm'
			args = ['bin']
			standardOutput = os
		}
		ext.binPath = os.toString().trim() + "/"
	}
}

// Install the bower components for front-end library management
task bowerInstall(dependsOn: 'npmInstall', type: Exec){
	workingDir 'src/main/web/app'
	commandLine "bower", 'install'
}

